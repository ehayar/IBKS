// <auto-generated />
using System;
using IBKSCompany.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IBKSCompany.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IBKSCompany.DATA.Models.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.HasIndex("BranchId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmployeeDOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeID1")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("SuperId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeID1");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Client", b =>
                {
                    b.HasOne("IBKSCompany.DATA.Models.Branch", "branch")
                        .WithMany("Clients")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Employee", b =>
                {
                    b.HasOne("IBKSCompany.DATA.Models.Branch", "branch")
                        .WithMany("employees")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IBKSCompany.DATA.Models.Employee", "employee")
                        .WithMany("employees")
                        .HasForeignKey("EmployeeID1");

                    b.Navigation("branch");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Branch", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("IBKSCompany.DATA.Models.Employee", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
